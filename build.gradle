plugins {
    id 'java-library'
    id 'jacoco'
    id 'maven-publish'
    id 'signing'
    id 'com.github.spotbugs' version '6.1.3'
}

group 'com.github.akunzai'
version '3.1.0'

java {
    sourceCompatibility = JavaVersion.VERSION_11
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.sendgrid:sendgrid-java:4.10.1'
    implementation 'jakarta.mail:jakarta.mail-api:2.1.3'
    implementation 'org.apache.logging.log4j:log4j-core:2.23.0'
    annotationProcessor 'org.apache.logging.log4j:log4j-core:2.23.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.11.4'
    testImplementation 'com.lmax:disruptor:4.0.0' // required for log4j2 AsyncLogger
    testImplementation 'com.sun.mail:javax.mail:1.6.2' // required for log4j2 SMTPAppender
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    spotbugs 'com.github.spotbugs:spotbugs:4.9.1'
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.13.0'

    constraints {
        implementation('com.fasterxml.jackson.core:jackson-databind:2.18.2') {
            // Use the latest version whenever possible
            because 'previous versions have known security vulnerabilities'
        }
        implementation('commons-codec:commons-codec:1.17.2') {
            // Use the latest version whenever possible
            because 'previous versions have known security vulnerabilities'
        }
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

spotbugs {
    excludeFilter = file("$projectDir/spotbugs-exclude.xml")
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'log4j2-sendgrid-appender'
                description = 'Send log4j2 errors via SendGrid service'
                url = 'https://github.com/akunzai/log4j2-sendgrid-appender'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'akunzai'
                        name = 'Charley Wu'
                        email = 'akunzai@gmail.com'
                    }
                }
                scm {
                    url = 'https://github.com/akunzai/log4j2-sendgrid-appender.git'
                }
            }
        }
    }
    repositories {
        maven {
            name = 'OSSRH'
            def releasesRepoUrl = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2'
            def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = project.findProperty('sonatype.user') ?: System.getenv('SONATYPE_USER')
                password = project.findProperty('sonatype.token') ?: System.getenv('SONATYPE_TOKEN')
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

task runTestRunner(type: JavaExec) {
    group = 'Verification'
    description 'Run the test runner'
    classpath = sourceSets.test.runtimeClasspath
    mainClass = 'com.github.akunzai.log4j.SendGridTestRunner'
    // https://logging.apache.org/log4j/2.x/manual/async.html#AllAsync
    systemProperties = ['log4j2.contextSelector': 'org.apache.logging.log4j.core.async.AsyncLoggerContextSelector']
}